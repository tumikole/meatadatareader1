{"version":3,"sources":["Components/FormData.js","App.js","reportWebVitals.js","index.js"],"names":["FormData","_useState","useState","_useState2","Object","slicedToArray","selectedFile","setSelectedFile","_useState3","_useState4","files","setFilesList","_useState5","_useState6","image","setImage","react_default","a","createElement","style","textAlign","padding","onSubmit","e","preventDefault","file","document","getElementsByName","blob","URL","createObjectURL","name","type","size","concat","toConsumableArray","console","log","handleSubmission","reactstrap_module","onChange","target","color","data","width","height","tag","map","val","onClick","props","onClickShow","outline","sm","body","disabled","href","App","className","Components_FormData","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.42d7867a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Button,\n  Row,\n  Col,\n  CardText,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n\nfunction FormData() {\n  const [selectedFile, setSelectedFile] = useState({});\n  const [files, setFilesList] = useState([]);\n  const [image, setImage] = useState(\"\");\n\n  const handleChange = (e) => {\n    setImage(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const onClickShow = (props) => {\n    const { name, type, size, blob } = props;\n    console.log(`props`, props);\n    setSelectedFile({\n      name,\n      type,\n      size,\n      blob,\n    });\n  };\n\n  const handleSubmission = (e) => {\n    e.preventDefault();\n    let file = document.getElementsByName(\"file\")[0].files[\"0\"];\n    let blob = URL.createObjectURL(file);\n    const { name, type, size } = file;\n    if (name && type && size) {\n      setFilesList([\n        ...files,\n        {\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          blob: blob,\n        },\n      ]);\n\n      console.log(\"tumisang\", blob);\n    }\n  };\n\n  return (\n    <div>\n          <h1 style={{textAlign:\"center\", padding:\"0\"}}>File Meta-Data Reader App</h1>\n\n      <form onSubmit={(e) => handleSubmission(e)}>\n        <FormGroup>\n          <Input type=\"file\" name=\"file\" onChange={handleChange} />\n        </FormGroup>\n\n        <div>\n          <Button>Submit</Button>\n        </div>\n      </form>\n\n      <div>\n        <Card>\n          <CardBody>\n            <h5 style={{ color: \"red\" }}>Choosen file</h5>\n            <div>\n              <object\n                data={image}\n                type=\"application/pdf\"\n                width=\"100%\"\n                height=\"100%\"\n              ></object>\n            </div>\n\n            <CardTitle tag=\"h1\">\n              <h4>Click on file name to show file information</h4>\n              {files.map((val) => {\n                return (\n                  <Button\n                    onClick={() => onClickShow(val)}\n                    color=\"success\"\n                    outline\n                    style={{ color: \"red\" }}\n                  >\n                  {val.name}\n                  </Button>\n                );\n              })}\n              <div></div>\n            </CardTitle>\n          </CardBody>\n        </Card>\n      </div>\n\n      <Row>\n        <Col sm=\"12\">\n          <Card body>\n            <CardTitle tag=\"h5\">File Information</CardTitle>\n          <Card body>\n\n              <Button disabled color=\"success\" outline>\n                Name: {selectedFile.name}\n              </Button>\n              </Card>\n              <Card body>\n                  <Button disabled color=\"info\" outline>\n                    Type: {selectedFile.type}\n                  </Button>\n                </Card>\n              <br />\n              <Card body>\n                <Button disabled color=\"warning\" outline>\n                  Size: {selectedFile.size}\n                </Button>\n              </Card>\n\n              <Card body>\n                <a\n                  color=\"danger\"\n                  target=\"_blank\"\n                  href={selectedFile.blob}\n                  outline\n                >\n                  {selectedFile.blob}\n                </a>\n              </Card>\n              </Card>\n\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default FormData;\n","import React from 'react';\nimport './App.css';\nimport FormData from './Components/FormData'\n\nfunction App() {\n\n  return (\n    <div style={{height:\"100%\"}} className=\"AppBody\">\n    <div className=\"App\">\n    <div className=\"AppComponents\">\n      <FormData/>\n      </div>\n    </div>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}